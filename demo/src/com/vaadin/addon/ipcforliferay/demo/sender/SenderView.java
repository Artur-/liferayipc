package com.vaadin.addon.ipcforliferay.demo.sender;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TextField;

/**
 * Demo form that supports sending Liferay client side inter-portlet messages to
 * other portlets on the same page.
 * 
 * Note that this portlet sends the message in two different ways at the same
 * time to demonstrate different ways to communicate complex data: as a
 * semicolon separated string via the client with the event id "newPerson", and
 * as a Person object in a shared portlet session with just a an internal
 * identifier for it sent via the client with the event id "newPersonInSession".
 * 
 * Normal applications only need one of these approaches.
 */
public class SenderView extends CustomComponent {

    @AutoGenerated
    private AbsoluteLayout mainLayout;
    @AutoGenerated
    private TextField ageField;
    @AutoGenerated
    private TextField lastNameField;
    @AutoGenerated
    private TextField firstNameField;
    @AutoGenerated
    private Button button_1;

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    /**
     * The constructor should first build the main layout, set the composition
     * root and then do any custom initialization.
     * 
     * The constructor will not be automatically regenerated by the visual
     * editor.
     */
    public SenderView() {
        buildMainLayout();
        setCompositionRoot(mainLayout);

        button_1.addClickListener(new Button.ClickListener() {

            public void buttonClick(ClickEvent event) {
                // Send the form contents as a Liferay client side IPC message
                String firstName = firstNameField.getValue();
                String lastName = lastNameField.getValue();
                int age = Integer.parseInt(ageField.getValue());

                // Note: this portlet sends the same data in two different ways
                // for different receivers. Normally, only one approach would be
                // used in a portlet, and all receivers would listen to the same
                // channel.

                // simple way of sending all the data via the client
                ((SenderUI) getUI()).sendPersonViaClient(firstName, lastName,
                        age);

                // second way: put the person in a shared session attribute and
                // notify others via client-side IPC
                ((SenderUI) getUI()).sendPersonViaSession(firstName, lastName,
                        age);
            }
        });
    }

    @AutoGenerated
    private AbsoluteLayout buildMainLayout() {
        // common part: create layout
        mainLayout = new AbsoluteLayout();
        mainLayout.setWidth("180px");
        mainLayout.setHeight("180px");

        // top-level component properties
        setWidth("180px");
        setHeight("180px");

        // button_1
        button_1 = new Button();
        button_1.setCaption("Add");
        button_1.setImmediate(true);
        button_1.setWidth("-1px");
        button_1.setHeight("-1px");
        mainLayout.addComponent(button_1, "top:140.0px;left:20.0px;");

        // firstNameField
        firstNameField = new TextField();
        firstNameField.setCaption("First name");
        firstNameField.setImmediate(false);
        firstNameField.setWidth("-1px");
        firstNameField.setHeight("-1px");
        mainLayout.addComponent(firstNameField, "top:20.0px;left:20.0px;");

        // lastNameField
        lastNameField = new TextField();
        lastNameField.setCaption("Last name");
        lastNameField.setImmediate(false);
        lastNameField.setWidth("-1px");
        lastNameField.setHeight("-1px");
        mainLayout.addComponent(lastNameField, "top:61.0px;left:20.0px;");

        // ageField
        ageField = new TextField();
        ageField.setCaption("Age");
        ageField.setImmediate(false);
        ageField.setWidth("40px");
        ageField.setHeight("-1px");
        mainLayout.addComponent(ageField, "top:101.0px;left:20.0px;");

        return mainLayout;
    }

}
