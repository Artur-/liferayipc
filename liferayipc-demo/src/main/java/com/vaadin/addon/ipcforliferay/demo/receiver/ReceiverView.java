package com.vaadin.addon.ipcforliferay.demo.receiver;

import java.util.ArrayList;

import com.vaadin.addon.ipcforliferay.demo.data.Person;
import com.vaadin.data.provider.ListDataProvider;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.VerticalLayout;

/**
 * Demo view that receives Liferay client side inter-portlet messages (from
 * SenderView) and displays their contents in a grid.
 */
public class ReceiverView extends CustomComponent {

    private VerticalLayout mainLayout = new VerticalLayout();;
    private Grid<Person> receivedDataGrid;

    private ListDataProvider<Person> personContainer;

    /**
     * The constructor should first build the main layout, set the composition
     * root and then do any custom initialization.
     *
     * The constructor will not be automatically regenerated by the visual
     * editor.
     */
    public ReceiverView() {
        buildMainLayout();
        setCompositionRoot(mainLayout);

        // Create initial container
        createContainer();

    }

    private void createContainer() {
        personContainer = new ListDataProvider<Person>(new ArrayList<>());
        receivedDataGrid.setDataProvider(personContainer);
        addUser("Artur", "Signell", 30);

    }

    public void addUser(String firstName, String lastName, int age) {
        Person person = new Person(firstName, lastName, age);
        personContainer.getItems().add(person);
        personContainer.refreshAll();
    }

    private void buildMainLayout() {
        // common part: create layout

        // top-level component properties
        setWidth("100.0%");

        // table_1
        receivedDataGrid = new Grid<>(Person.class);
        receivedDataGrid.setCaption("Current users");
        receivedDataGrid.setWidth("100%");
        mainLayout.addComponent(receivedDataGrid);
    }

}
